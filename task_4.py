def nadoelo_eto_delat(lst):                         # –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (—Å–ø–∏—Å–æ–∫)
    out = []                                        # –ó–∞–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤—Å–µ—Ö –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —á–∏—Å–µ–ª
    for x in lst:                                   # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤ –ø–µ—Ä–µ–º–µ–Ω–æ–π x
        if not x in out:                            # –ï—Å–ª–∏ x –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
            out.append(x)                           # –î–æ–±–æ–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ out

    for i in range(0, len(out) - 1, 2):             # –í–µ–¥–µ–º –æ—Ç—á–µ—Ç –æ—Ç 0 –¥–æ –¥–ª–∏–Ω–Ω—ã —Å–ø–∏—Å–∫–∞ —Å —à–∞–≥–æ–º 2
        out[i], out[i + 1] = out[i + 1], out[i]     # –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —Å–æ—Å–µ–¥–Ω–∏–µ —á–∏—Å–ª–∞


lst = [1, 3, 1, 3, 4, 5, 6, 7, 9]                   # –ó–∞–¥–∞–µ–º —Å–ø–∏—Å–æ–∫
print(nadoelo_eto_delat(lst))                       # –í—ã–∑—ã–≤–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏


                                                    # Misha üíî